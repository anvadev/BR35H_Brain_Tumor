{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "___"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<p style = \"font-family:courier;font-size:25px;\">\n",
    "BR35H-MASK-RCNN      \n",
    "</p>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<p style = \"font-family:courier;font-size:15px;\">\n",
    "Capstone Phase 5 Project     \n",
    "</p>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b>Name:</b> Ansel Vallejo"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<i><font color = 'gray'>Source: </font></i>\n",
    "https://www.kaggle.com/datasets/ahmedhamada0/brain-tumor-detection"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "___"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "#### <b> Overview </b>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "<div style=\"text-align: justify\">\n",
    "In the medical field, Brain tumor is seen as a serious, abnormal growth of cells in or near the brain that can be either benign, which is non-cancerous or malignant, which is cancerous. There are many treatments an individual with such tumor can receive, such as radiation therapy, chemotherapy, therapeutic drug, etc. Brain tumor can be seen via Magnetic Resonance Imaging (MRI) scanned images. Human error is prone to occur in any industry, and because of such error in the medical field can cost a life. To detect and identify what constitutes a benign or malignant tumor without human intervention would be to build a robust deep learning model to help the medical practitioner properly classify a cancerous from noncancerous tumors using over 3000 MRI scan trained images and testing images to help better serve the model.\n",
    "</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "<b>Algorithm Implemented: </b> <i>Convolutional Neural Network</i> (Deep Learning) <br>\n",
    "<b>Data type: </b> Unstructured"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "___"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Import Libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'cv2'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "Input \u001b[1;32mIn [103]\u001b[0m, in \u001b[0;36m<cell line: 9>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      7\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mkeras\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mpreprocessing\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mimage\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m ImageDataGenerator\n\u001b[0;32m      8\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mtensorflow\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mkeras\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mutils\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m array_to_img, img_to_array, load_img\n\u001b[1;32m----> 9\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mcv2\u001b[39;00m\n\u001b[0;32m     10\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mos\u001b[39;00m\n",
      "\u001b[1;31mModuleNotFoundError\u001b[0m: No module named 'cv2'"
     ]
    }
   ],
   "source": [
    "import pandas as pd                       #Data Analysis and manipulation tool\n",
    "import numpy as np                        #Scientific computing\n",
    "import matplotlib.pyplot as plt           #Visualization\n",
    "%matplotlib inline\n",
    "\n",
    "#Import image data\n",
    "from keras.preprocessing.image import ImageDataGenerator\n",
    "from tensorflow.keras.utils import array_to_img, img_to_array, load_img\n",
    "import cv2\n",
    "import os"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Import Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b> Creating a directory path for the train and test data </b>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Folder name of the images\n",
    "no_tumor = 'no'\n",
    "yes_tumor = 'yes'\n",
    "pred_tumor = 'pred'\n",
    "\n",
    "img_dir = '/'\n",
    "\n",
    "#Function that displays the image list directory\n",
    "def list_dir(path):\n",
    "    img_dir = '/'\n",
    "    img_list = os.listdir(path + img_dir)\n",
    "    return img_list\n",
    "\n",
    "\n",
    "train_img_dir = 'TRAIN_draft/'\n",
    "test_img_dir = 'TEST_draft/'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Display the no_tumor images in the directory"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['no0.jpg',\n",
       " 'no1.jpg',\n",
       " 'no10.jpg',\n",
       " 'no100.jpg',\n",
       " 'no1000.jpg',\n",
       " 'no1001.jpg',\n",
       " 'no1002.jpg',\n",
       " 'no1003.jpg',\n",
       " 'no1004.jpg',\n",
       " 'no1005.jpg',\n",
       " 'no1006.jpg',\n",
       " 'no1007.jpg',\n",
       " 'no1008.jpg',\n",
       " 'no1009.jpg',\n",
       " 'no101.jpg',\n",
       " 'no1010.jpg',\n",
       " 'no1011.jpg',\n",
       " 'no1012.jpg',\n",
       " 'no1013.jpg',\n",
       " 'no1014.jpg',\n",
       " 'no1015.jpg',\n",
       " 'no1016.jpg',\n",
       " 'no1017.jpg',\n",
       " 'no1018.jpg',\n",
       " 'no1019.jpg',\n",
       " 'no102.jpg',\n",
       " 'no1020.jpg',\n",
       " 'no1021.jpg',\n",
       " 'no1022.jpg',\n",
       " 'no1023.jpg',\n",
       " 'no1024.jpg',\n",
       " 'no1025.jpg',\n",
       " 'no1026.jpg',\n",
       " 'no1027.jpg',\n",
       " 'no1028.jpg',\n",
       " 'no1029.jpg',\n",
       " 'no103.jpg',\n",
       " 'no1030.jpg',\n",
       " 'no1031.jpg',\n",
       " 'no1032.jpg',\n",
       " 'no1033.jpg',\n",
       " 'no1034.jpg',\n",
       " 'no1035.jpg',\n",
       " 'no1036.jpg',\n",
       " 'no1037.jpg',\n",
       " 'no1038.jpg',\n",
       " 'no1039.jpg',\n",
       " 'no104.jpg',\n",
       " 'no1040.jpg',\n",
       " 'no1041.jpg',\n",
       " 'no1042.jpg',\n",
       " 'no1043.jpg',\n",
       " 'no1044.jpg',\n",
       " 'no1045.jpg',\n",
       " 'no1046.jpg',\n",
       " 'no1047.jpg',\n",
       " 'no1048.jpg',\n",
       " 'no1049.jpg',\n",
       " 'no105.jpg',\n",
       " 'no1050.jpg',\n",
       " 'no1051.jpg',\n",
       " 'no1052.jpg',\n",
       " 'no1053.jpg',\n",
       " 'no1054.jpg',\n",
       " 'no1055.jpg',\n",
       " 'no1056.jpg',\n",
       " 'no1057.jpg',\n",
       " 'no1058.jpg',\n",
       " 'no1059.jpg',\n",
       " 'no106.jpg',\n",
       " 'no1060.jpg',\n",
       " 'no1061.jpg',\n",
       " 'no1062.jpg',\n",
       " 'no1063.jpg',\n",
       " 'no1064.jpg',\n",
       " 'no1065.jpg',\n",
       " 'no1066.jpg',\n",
       " 'no1067.jpg',\n",
       " 'no1068.jpg',\n",
       " 'no1069.jpg',\n",
       " 'no107.jpg',\n",
       " 'no1070.jpg',\n",
       " 'no1071.jpg',\n",
       " 'no1072.jpg',\n",
       " 'no1073.jpg',\n",
       " 'no1074.jpg',\n",
       " 'no1075.jpg',\n",
       " 'no1076.jpg',\n",
       " 'no1077.jpg',\n",
       " 'no1078.jpg',\n",
       " 'no1079.jpg',\n",
       " 'no108.jpg',\n",
       " 'no1080.jpg',\n",
       " 'no1081.jpg',\n",
       " 'no1082.jpg',\n",
       " 'no1083.jpg',\n",
       " 'no1084.jpg',\n",
       " 'no1085.jpg',\n",
       " 'no1086.jpg',\n",
       " 'no1087.jpg',\n",
       " 'no1088.jpg',\n",
       " 'no1089.jpg',\n",
       " 'no109.jpg',\n",
       " 'no1090.jpg',\n",
       " 'no1091.jpg',\n",
       " 'no1092.jpg',\n",
       " 'no1093.jpg',\n",
       " 'no1094.jpg',\n",
       " 'no1095.jpg',\n",
       " 'no1096.jpg',\n",
       " 'no1097.jpg',\n",
       " 'no1098.jpg',\n",
       " 'no1099.jpg',\n",
       " 'no11.jpg',\n",
       " 'no110.jpg',\n",
       " 'no1100.jpg',\n",
       " 'no1101.jpg',\n",
       " 'no1102.jpg',\n",
       " 'no1103.jpg',\n",
       " 'no1104.jpg',\n",
       " 'no1105.jpg',\n",
       " 'no1106.jpg',\n",
       " 'no1107.jpg',\n",
       " 'no1108.jpg',\n",
       " 'no1109.jpg',\n",
       " 'no111.jpg',\n",
       " 'no1110.jpg',\n",
       " 'no1111.jpg',\n",
       " 'no1112.jpg',\n",
       " 'no1113.jpg',\n",
       " 'no1114.jpg',\n",
       " 'no1115.jpg',\n",
       " 'no1116.jpg',\n",
       " 'no1117.jpg',\n",
       " 'no1118.jpg',\n",
       " 'no1119.jpg',\n",
       " 'no112.jpg',\n",
       " 'no1120.jpg',\n",
       " 'no1121.jpg',\n",
       " 'no1122.jpg',\n",
       " 'no1123.jpg',\n",
       " 'no1124.jpg',\n",
       " 'no1125.jpg',\n",
       " 'no1126.jpg',\n",
       " 'no1127.jpg',\n",
       " 'no1128.jpg',\n",
       " 'no1129.jpg',\n",
       " 'no113.jpg',\n",
       " 'no1130.jpg',\n",
       " 'no1131.jpg',\n",
       " 'no1132.jpg',\n",
       " 'no1133.jpg',\n",
       " 'no1134.jpg',\n",
       " 'no1135.jpg',\n",
       " 'no1136.jpg',\n",
       " 'no1137.jpg',\n",
       " 'no1138.jpg',\n",
       " 'no1139.jpg',\n",
       " 'no114.jpg',\n",
       " 'no1140.jpg',\n",
       " 'no1141.jpg',\n",
       " 'no1142.jpg',\n",
       " 'no1143.jpg',\n",
       " 'no1144.jpg',\n",
       " 'no1145.jpg',\n",
       " 'no1146.jpg',\n",
       " 'no1147.jpg',\n",
       " 'no1148.jpg',\n",
       " 'no1149.jpg',\n",
       " 'no115.jpg',\n",
       " 'no1150.jpg',\n",
       " 'no1151.jpg',\n",
       " 'no1152.jpg',\n",
       " 'no1153.jpg',\n",
       " 'no1154.jpg',\n",
       " 'no1155.jpg',\n",
       " 'no1156.jpg',\n",
       " 'no1157.jpg',\n",
       " 'no1158.jpg',\n",
       " 'no1159.jpg',\n",
       " 'no116.jpg',\n",
       " 'no1160.jpg',\n",
       " 'no1161.jpg',\n",
       " 'no1162.jpg',\n",
       " 'no1163.jpg',\n",
       " 'no1164.jpg',\n",
       " 'no1165.jpg',\n",
       " 'no1166.jpg',\n",
       " 'no1167.jpg',\n",
       " 'no1168.jpg',\n",
       " 'no1169.jpg',\n",
       " 'no117.jpg',\n",
       " 'no1170.jpg',\n",
       " 'no1171.jpg',\n",
       " 'no1172.jpg',\n",
       " 'no1173.jpg',\n",
       " 'no1174.jpg',\n",
       " 'no1175.jpg',\n",
       " 'no1176.jpg',\n",
       " 'no1177.jpg',\n",
       " 'no1178.jpg',\n",
       " 'no1179.jpg',\n",
       " 'no118.jpg',\n",
       " 'no1180.jpg',\n",
       " 'no1181.jpg',\n",
       " 'no1182.jpg',\n",
       " 'no1183.jpg',\n",
       " 'no1184.jpg',\n",
       " 'no1185.jpg',\n",
       " 'no1186.jpg',\n",
       " 'no1187.jpg',\n",
       " 'no1188.jpg',\n",
       " 'no1189.jpg',\n",
       " 'no119.jpg',\n",
       " 'no1190.jpg',\n",
       " 'no1191.jpg',\n",
       " 'no1192.jpg',\n",
       " 'no1193.jpg',\n",
       " 'no1194.jpg',\n",
       " 'no1195.jpg',\n",
       " 'no1196.jpg',\n",
       " 'no1197.jpg',\n",
       " 'no1198.jpg',\n",
       " 'no1199.jpg',\n",
       " 'No12.jpg',\n",
       " 'no120.jpg',\n",
       " 'no1200.jpg',\n",
       " 'no1201.jpg',\n",
       " 'no1202.jpg',\n",
       " 'no1203.jpg',\n",
       " 'no1204.jpg',\n",
       " 'no1205.jpg',\n",
       " 'no1206.jpg',\n",
       " 'no1207.jpg',\n",
       " 'no1208.jpg',\n",
       " 'no1209.jpg',\n",
       " 'no121.jpg',\n",
       " 'no1210.jpg',\n",
       " 'no1211.jpg',\n",
       " 'no1212.jpg',\n",
       " 'no1213.jpg',\n",
       " 'no1214.jpg',\n",
       " 'no1215.jpg',\n",
       " 'no1216.jpg',\n",
       " 'no1217.jpg',\n",
       " 'no1218.jpg',\n",
       " 'no1219.jpg',\n",
       " 'no122.jpg',\n",
       " 'no1220.jpg',\n",
       " 'no1221.jpg',\n",
       " 'no1222.jpg',\n",
       " 'no1223.jpg',\n",
       " 'no1224.jpg',\n",
       " 'no1225.jpg',\n",
       " 'no1226.jpg',\n",
       " 'no1227.jpg',\n",
       " 'no1228.jpg',\n",
       " 'no1229.jpg',\n",
       " 'no123.jpg',\n",
       " 'no1230.jpg',\n",
       " 'no1231.jpg',\n",
       " 'no1232.jpg',\n",
       " 'no1233.jpg',\n",
       " 'no1234.jpg',\n",
       " 'no1235.jpg',\n",
       " 'no1236.jpg',\n",
       " 'no1237.jpg',\n",
       " 'no1238.jpg',\n",
       " 'no1239.jpg',\n",
       " 'no124.jpg',\n",
       " 'no1240.jpg',\n",
       " 'no1241.jpg',\n",
       " 'no1242.jpg',\n",
       " 'no1243.jpg',\n",
       " 'no1244.jpg',\n",
       " 'no1245.jpg',\n",
       " 'no1246.jpg',\n",
       " 'no1247.jpg',\n",
       " 'no1248.jpg',\n",
       " 'no1249.jpg',\n",
       " 'no125.jpg',\n",
       " 'no1250.jpg',\n",
       " 'no1251.jpg',\n",
       " 'no1252.jpg',\n",
       " 'no1253.jpg',\n",
       " 'no1254.jpg',\n",
       " 'no1255.jpg',\n",
       " 'no1256.jpg',\n",
       " 'no1257.jpg',\n",
       " 'no1258.jpg',\n",
       " 'no1259.jpg',\n",
       " 'no126.jpg',\n",
       " 'no1260.jpg',\n",
       " 'no1261.jpg',\n",
       " 'no1262.jpg',\n",
       " 'no1263.jpg',\n",
       " 'no1264.jpg',\n",
       " 'no1265.jpg',\n",
       " 'no1266.jpg',\n",
       " 'no1267.jpg',\n",
       " 'no1268.jpg',\n",
       " 'no1269.jpg',\n",
       " 'no127.jpg',\n",
       " 'no1270.jpg',\n",
       " 'no1271.jpg',\n",
       " 'no1272.jpg',\n",
       " 'no1273.jpg',\n",
       " 'no1274.jpg',\n",
       " 'no1275.jpg',\n",
       " 'no1276.jpg',\n",
       " 'no1277.jpg',\n",
       " 'no1278.jpg',\n",
       " 'no1279.jpg',\n",
       " 'no128.jpg',\n",
       " 'no1280.jpg',\n",
       " 'no1281.jpg',\n",
       " 'no1282.jpg',\n",
       " 'no1283.jpg',\n",
       " 'no1284.jpg',\n",
       " 'no1285.jpg',\n",
       " 'no1286.jpg',\n",
       " 'no1287.jpg',\n",
       " 'no1288.jpg',\n",
       " 'no1289.jpg',\n",
       " 'no129.jpg',\n",
       " 'no1290.jpg',\n",
       " 'no1291.jpg',\n",
       " 'no1292.jpg',\n",
       " 'no1293.jpg',\n",
       " 'no1294.jpg',\n",
       " 'no1295.jpg',\n",
       " 'no1296.jpg',\n",
       " 'no1297.jpg',\n",
       " 'no1298.jpg',\n",
       " 'no1299.jpg',\n",
       " 'No13.jpg',\n",
       " 'no130.jpg',\n",
       " 'no1300.jpg',\n",
       " 'no1301.jpg',\n",
       " 'no1302.jpg',\n",
       " 'no1303.jpg',\n",
       " 'no1304.jpg',\n",
       " 'no1305.jpg',\n",
       " 'no1306.jpg',\n",
       " 'no1307.jpg',\n",
       " 'no1308.jpg',\n",
       " 'no1309.jpg',\n",
       " 'no131.jpg',\n",
       " 'no1310.jpg',\n",
       " 'no1311.jpg',\n",
       " 'no1312.jpg',\n",
       " 'no1313.jpg',\n",
       " 'no1314.jpg',\n",
       " 'no1315.jpg',\n",
       " 'no1316.jpg',\n",
       " 'no1317.jpg',\n",
       " 'no1318.jpg',\n",
       " 'no1319.jpg',\n",
       " 'no132.jpg',\n",
       " 'no1320.jpg',\n",
       " 'no1321.jpg',\n",
       " 'no1322.jpg',\n",
       " 'no1323.jpg',\n",
       " 'no1324.jpg',\n",
       " 'no1325.jpg',\n",
       " 'no1326.jpg',\n",
       " 'no1327.jpg',\n",
       " 'no1328.jpg',\n",
       " 'no1329.jpg',\n",
       " 'no133.jpg',\n",
       " 'no1330.jpg',\n",
       " 'no1331.jpg',\n",
       " 'no1332.jpg',\n",
       " 'no1333.jpg',\n",
       " 'no1334.jpg',\n",
       " 'no1335.jpg',\n",
       " 'no1336.jpg',\n",
       " 'no1337.jpg',\n",
       " 'no1338.jpg',\n",
       " 'no1339.jpg',\n",
       " 'no134.jpg',\n",
       " 'no1340.jpg',\n",
       " 'no1341.jpg',\n",
       " 'no1342.jpg',\n",
       " 'no1343.jpg',\n",
       " 'no1344.jpg',\n",
       " 'no1345.jpg',\n",
       " 'no1346.jpg',\n",
       " 'no1347.jpg',\n",
       " 'no1348.jpg',\n",
       " 'no1349.jpg',\n",
       " 'no135.jpg',\n",
       " 'no1350.jpg',\n",
       " 'no1351.jpg',\n",
       " 'no1352.jpg',\n",
       " 'no1353.jpg',\n",
       " 'no1354.jpg',\n",
       " 'no1355.jpg',\n",
       " 'no1356.jpg',\n",
       " 'no1357.jpg',\n",
       " 'no1358.jpg',\n",
       " 'no1359.jpg',\n",
       " 'no136.jpg',\n",
       " 'no1360.jpg',\n",
       " 'no1361.jpg',\n",
       " 'no1362.jpg',\n",
       " 'no1363.jpg',\n",
       " 'no1364.jpg',\n",
       " 'no1365.jpg',\n",
       " 'no1366.jpg',\n",
       " 'no1367.jpg',\n",
       " 'no1368.jpg',\n",
       " 'no1369.jpg',\n",
       " 'no137.jpg',\n",
       " 'no1370.jpg',\n",
       " 'no1371.jpg',\n",
       " 'no1372.jpg',\n",
       " 'no1373.jpg',\n",
       " 'no1374.jpg',\n",
       " 'no1375.jpg',\n",
       " 'no1376.jpg',\n",
       " 'no1377.jpg',\n",
       " 'no1378.jpg',\n",
       " 'no1379.jpg',\n",
       " 'no138.jpg',\n",
       " 'no1380.jpg',\n",
       " 'no1381.jpg',\n",
       " 'no1382.jpg',\n",
       " 'no1383.jpg',\n",
       " 'no1384.jpg',\n",
       " 'no1385.jpg',\n",
       " 'no1386.jpg',\n",
       " 'no1387.jpg',\n",
       " 'no1388.jpg',\n",
       " 'no1389.jpg',\n",
       " 'no139.jpg',\n",
       " 'no1390.jpg',\n",
       " 'no1391.jpg',\n",
       " 'no1392.jpg',\n",
       " 'no1393.jpg',\n",
       " 'no1394.jpg',\n",
       " 'no1395.jpg',\n",
       " 'no1396.jpg',\n",
       " 'no1397.jpg',\n",
       " 'no1398.jpg',\n",
       " 'no1399.jpg',\n",
       " 'No14.jpg',\n",
       " 'no140.jpg',\n",
       " 'no1400.jpg',\n",
       " 'no1401.jpg',\n",
       " 'no1402.jpg',\n",
       " 'no1403.jpg',\n",
       " 'no1404.jpg',\n",
       " 'no1405.jpg',\n",
       " 'no1406.jpg',\n",
       " 'no1407.jpg',\n",
       " 'no1408.jpg',\n",
       " 'no1409.jpg',\n",
       " 'no141.jpg',\n",
       " 'no1410.jpg',\n",
       " 'no1411.jpg',\n",
       " 'no1412.jpg',\n",
       " 'no1413.jpg',\n",
       " 'no1414.jpg',\n",
       " 'no1415.jpg',\n",
       " 'no1416.jpg',\n",
       " 'no1417.jpg',\n",
       " 'no1418.jpg',\n",
       " 'no1419.jpg',\n",
       " 'no142.jpg',\n",
       " 'no1420.jpg',\n",
       " 'no1421.jpg',\n",
       " 'no1422.jpg',\n",
       " 'no1423.jpg',\n",
       " 'no1424.jpg',\n",
       " 'no1425.jpg',\n",
       " 'no1426.jpg',\n",
       " 'no1427.jpg',\n",
       " 'no1428.jpg',\n",
       " 'no1429.jpg',\n",
       " 'no143.jpg',\n",
       " 'no1430.jpg',\n",
       " 'no1431.jpg',\n",
       " 'no1432.jpg',\n",
       " 'no1433.jpg',\n",
       " 'no1434.jpg',\n",
       " 'no1435.jpg',\n",
       " 'no1436.jpg',\n",
       " 'no1437.jpg',\n",
       " 'no1438.jpg',\n",
       " 'no1439.jpg',\n",
       " 'no144.jpg',\n",
       " 'no1440.jpg',\n",
       " 'no1441.jpg',\n",
       " 'no1442.jpg',\n",
       " 'no1443.jpg',\n",
       " 'no1444.jpg',\n",
       " 'no1445.jpg',\n",
       " 'no1446.jpg',\n",
       " 'no1447.jpg',\n",
       " 'no1448.jpg',\n",
       " 'no1449.jpg',\n",
       " 'no145.jpg',\n",
       " 'no1450.jpg',\n",
       " 'no1451.jpg',\n",
       " 'no1452.jpg',\n",
       " 'no1453.jpg',\n",
       " 'no1454.jpg',\n",
       " 'no1455.jpg',\n",
       " 'no1456.jpg',\n",
       " 'no1457.jpg',\n",
       " 'no1458.jpg',\n",
       " 'no1459.jpg',\n",
       " 'no146.jpg',\n",
       " 'no1460.jpg',\n",
       " 'no1461.jpg',\n",
       " 'no1462.jpg',\n",
       " 'no1463.jpg',\n",
       " 'no1464.jpg',\n",
       " 'no1465.jpg',\n",
       " 'no1466.jpg',\n",
       " 'no1467.jpg',\n",
       " 'no1468.jpg',\n",
       " 'no1469.jpg',\n",
       " 'no147.jpg',\n",
       " 'no1470.jpg',\n",
       " 'no1471.jpg',\n",
       " 'no1472.jpg',\n",
       " 'no1473.jpg',\n",
       " 'no1474.jpg',\n",
       " 'no1475.jpg',\n",
       " 'no1476.jpg',\n",
       " 'no1477.jpg',\n",
       " 'no1478.jpg',\n",
       " 'no1479.jpg',\n",
       " 'no148.jpg',\n",
       " 'no1480.jpg',\n",
       " 'no1481.jpg',\n",
       " 'no1482.jpg',\n",
       " 'no1483.jpg',\n",
       " 'no1484.jpg',\n",
       " 'no1485.jpg',\n",
       " 'no1486.jpg',\n",
       " 'no1487.jpg',\n",
       " 'no1488.jpg',\n",
       " 'no1489.jpg',\n",
       " 'no149.jpg',\n",
       " 'no1490.jpg',\n",
       " 'no1491.jpg',\n",
       " 'no1492.jpg',\n",
       " 'no1493.jpg',\n",
       " 'no1494.jpg',\n",
       " 'no1495.jpg',\n",
       " 'no1496.jpg',\n",
       " 'no1497.jpg',\n",
       " 'no1498.jpg',\n",
       " 'no1499.jpg',\n",
       " 'No15.jpg',\n",
       " 'no150.jpg',\n",
       " 'no151.jpg',\n",
       " 'no152.jpg',\n",
       " 'no153.jpg',\n",
       " 'no154.jpg',\n",
       " 'no155.jpg',\n",
       " 'no156.jpg',\n",
       " 'no157.jpg',\n",
       " 'no158.jpg',\n",
       " 'no159.jpg',\n",
       " 'no16.jpg',\n",
       " 'no160.jpg',\n",
       " 'no161.jpg',\n",
       " 'no162.jpg',\n",
       " 'no163.jpg',\n",
       " 'no164.jpg',\n",
       " 'no165.jpg',\n",
       " 'no166.jpg',\n",
       " 'no167.jpg',\n",
       " 'no168.jpg',\n",
       " 'no169.jpg',\n",
       " 'No17.jpg',\n",
       " 'no170.jpg',\n",
       " 'no171.jpg',\n",
       " 'no172.jpg',\n",
       " 'no173.jpg',\n",
       " 'no174.jpg',\n",
       " 'no175.jpg',\n",
       " 'no176.jpg',\n",
       " 'no177.jpg',\n",
       " 'no178.jpg',\n",
       " 'no179.jpg',\n",
       " 'No18.jpg',\n",
       " 'no180.jpg',\n",
       " 'no181.jpg',\n",
       " 'no182.jpg',\n",
       " 'no183.jpg',\n",
       " 'no184.jpg',\n",
       " 'no185.jpg',\n",
       " 'no186.jpg',\n",
       " 'no187.jpg',\n",
       " 'no188.jpg',\n",
       " 'no189.jpg',\n",
       " 'No19.jpg',\n",
       " 'no190.jpg',\n",
       " 'no191.jpg',\n",
       " 'no192.jpg',\n",
       " 'no193.jpg',\n",
       " 'no194.jpg',\n",
       " 'no195.jpg',\n",
       " 'no196.jpg',\n",
       " 'no197.jpg',\n",
       " 'no198.jpg',\n",
       " 'no199.jpg',\n",
       " 'no2.jpg',\n",
       " 'no20.jpg',\n",
       " 'no200.jpg',\n",
       " 'no201.jpg',\n",
       " 'no202.jpg',\n",
       " 'no203.jpg',\n",
       " 'no204.jpg',\n",
       " 'no205.jpg',\n",
       " 'no206.jpg',\n",
       " 'no207.jpg',\n",
       " 'no208.jpg',\n",
       " 'no209.jpg',\n",
       " 'no21.jpg',\n",
       " 'no210.jpg',\n",
       " 'no211.jpg',\n",
       " 'no212.jpg',\n",
       " 'no213.jpg',\n",
       " 'no214.jpg',\n",
       " 'no215.jpg',\n",
       " 'no216.jpg',\n",
       " 'no217.jpg',\n",
       " 'no218.jpg',\n",
       " 'no219.jpg',\n",
       " 'no22.jpg',\n",
       " 'no220.jpg',\n",
       " 'no221.jpg',\n",
       " 'no222.jpg',\n",
       " 'no223.jpg',\n",
       " 'no224.jpg',\n",
       " 'no225.jpg',\n",
       " 'no226.jpg',\n",
       " 'no227.jpg',\n",
       " 'no228.jpg',\n",
       " 'no229.jpg',\n",
       " 'no23.jpg',\n",
       " 'no230.jpg',\n",
       " 'no231.jpg',\n",
       " 'no232.jpg',\n",
       " 'no233.jpg',\n",
       " 'no234.jpg',\n",
       " 'no235.jpg',\n",
       " 'no236.jpg',\n",
       " 'no237.jpg',\n",
       " 'no238.jpg',\n",
       " 'no239.jpg',\n",
       " 'no24.jpg',\n",
       " 'no240.jpg',\n",
       " 'no241.jpg',\n",
       " 'no242.jpg',\n",
       " 'no243.jpg',\n",
       " 'no244.jpg',\n",
       " 'no245.jpg',\n",
       " 'no246.jpg',\n",
       " 'no247.jpg',\n",
       " 'no248.jpg',\n",
       " 'no249.jpg',\n",
       " 'no25.jpg',\n",
       " 'no250.jpg',\n",
       " 'no251.jpg',\n",
       " 'no252.jpg',\n",
       " 'no253.jpg',\n",
       " 'no254.jpg',\n",
       " 'no255.jpg',\n",
       " 'no256.jpg',\n",
       " 'no257.jpg',\n",
       " 'no258.jpg',\n",
       " 'no259.jpg',\n",
       " 'no26.jpg',\n",
       " 'no260.jpg',\n",
       " 'no261.jpg',\n",
       " 'no262.jpg',\n",
       " 'no263.jpg',\n",
       " 'no264.jpg',\n",
       " 'no265.jpg',\n",
       " 'no266.jpg',\n",
       " 'no267.jpg',\n",
       " 'no268.jpg',\n",
       " 'no269.jpg',\n",
       " 'no27.jpg',\n",
       " 'no270.jpg',\n",
       " 'no271.jpg',\n",
       " 'no272.jpg',\n",
       " 'no273.jpg',\n",
       " 'no274.jpg',\n",
       " 'no275.jpg',\n",
       " 'no276.jpg',\n",
       " 'no277.jpg',\n",
       " 'no278.jpg',\n",
       " 'no279.jpg',\n",
       " 'no28.jpg',\n",
       " 'no280.jpg',\n",
       " 'no281.jpg',\n",
       " 'no282.jpg',\n",
       " 'no283.jpg',\n",
       " 'no284.jpg',\n",
       " 'no285.jpg',\n",
       " 'no286.jpg',\n",
       " 'no287.jpg',\n",
       " 'no288.jpg',\n",
       " 'no289.jpg',\n",
       " 'no29.jpg',\n",
       " 'no290.jpg',\n",
       " 'no291.jpg',\n",
       " 'no292.jpg',\n",
       " 'no293.jpg',\n",
       " 'no294.jpg',\n",
       " 'no295.jpg',\n",
       " 'no296.jpg',\n",
       " 'no297.jpg',\n",
       " 'no298.jpg',\n",
       " 'no299.jpg',\n",
       " 'no3.jpg',\n",
       " 'no30.jpg',\n",
       " 'no300.jpg',\n",
       " 'no301.jpg',\n",
       " 'no302.jpg',\n",
       " 'no303.jpg',\n",
       " 'no304.jpg',\n",
       " 'no305.jpg',\n",
       " 'no306.jpg',\n",
       " 'no307.jpg',\n",
       " 'no308.jpg',\n",
       " 'no309.jpg',\n",
       " 'no31.jpg',\n",
       " 'no310.jpg',\n",
       " 'no311.jpg',\n",
       " 'no312.jpg',\n",
       " 'no313.jpg',\n",
       " 'no314.jpg',\n",
       " 'no315.jpg',\n",
       " 'no316.jpg',\n",
       " 'no317.jpg',\n",
       " 'no318.jpg',\n",
       " 'no319.jpg',\n",
       " 'no32.jpg',\n",
       " 'no320.jpg',\n",
       " 'no321.jpg',\n",
       " 'no322.jpg',\n",
       " 'no323.jpg',\n",
       " 'no324.jpg',\n",
       " 'no325.jpg',\n",
       " 'no326.jpg',\n",
       " 'no327.jpg',\n",
       " 'no328.jpg',\n",
       " 'no329.jpg',\n",
       " 'no33.jpg',\n",
       " 'no330.jpg',\n",
       " 'no331.jpg',\n",
       " 'no332.jpg',\n",
       " 'no333.jpg',\n",
       " 'no334.jpg',\n",
       " 'no335.jpg',\n",
       " 'no336.jpg',\n",
       " 'no337.jpg',\n",
       " 'no338.jpg',\n",
       " 'no339.jpg',\n",
       " 'no34.jpg',\n",
       " 'no340.jpg',\n",
       " 'no341.jpg',\n",
       " 'no342.jpg',\n",
       " 'no343.jpg',\n",
       " 'no344.jpg',\n",
       " 'no345.jpg',\n",
       " 'no346.jpg',\n",
       " 'no347.jpg',\n",
       " 'no348.jpg',\n",
       " 'no349.jpg',\n",
       " 'no35.jpg',\n",
       " 'no350.jpg',\n",
       " 'no351.jpg',\n",
       " 'no352.jpg',\n",
       " 'no353.jpg',\n",
       " 'no354.jpg',\n",
       " 'no355.jpg',\n",
       " 'no356.jpg',\n",
       " 'no357.jpg',\n",
       " 'no358.jpg',\n",
       " 'no359.jpg',\n",
       " 'no36.jpg',\n",
       " 'no360.jpg',\n",
       " 'no361.jpg',\n",
       " 'no362.jpg',\n",
       " 'no363.jpg',\n",
       " 'no364.jpg',\n",
       " 'no365.jpg',\n",
       " 'no366.jpg',\n",
       " 'no367.jpg',\n",
       " 'no368.jpg',\n",
       " 'no369.jpg',\n",
       " 'no37.jpg',\n",
       " 'no370.jpg',\n",
       " 'no371.jpg',\n",
       " 'no372.jpg',\n",
       " 'no373.jpg',\n",
       " 'no374.jpg',\n",
       " 'no375.jpg',\n",
       " 'no376.jpg',\n",
       " 'no377.jpg',\n",
       " 'no378.jpg',\n",
       " 'no379.jpg',\n",
       " 'no38.jpg',\n",
       " 'no380.jpg',\n",
       " 'no381.jpg',\n",
       " 'no382.jpg',\n",
       " 'no383.jpg',\n",
       " 'no384.jpg',\n",
       " 'no385.jpg',\n",
       " 'no386.jpg',\n",
       " 'no387.jpg',\n",
       " 'no388.jpg',\n",
       " 'no389.jpg',\n",
       " 'no39.jpg',\n",
       " 'no390.jpg',\n",
       " 'no391.jpg',\n",
       " 'no392.jpg',\n",
       " 'no393.jpg',\n",
       " 'no394.jpg',\n",
       " 'no395.jpg',\n",
       " 'no396.jpg',\n",
       " 'no397.jpg',\n",
       " 'no398.jpg',\n",
       " 'no399.jpg',\n",
       " 'no4.jpg',\n",
       " 'no40.jpg',\n",
       " 'no400.jpg',\n",
       " 'no401.jpg',\n",
       " 'no402.jpg',\n",
       " 'no403.jpg',\n",
       " 'no404.jpg',\n",
       " 'no405.jpg',\n",
       " 'no406.jpg',\n",
       " 'no407.jpg',\n",
       " 'no408.jpg',\n",
       " 'no409.jpg',\n",
       " 'no41.jpg',\n",
       " 'no410.jpg',\n",
       " 'no411.jpg',\n",
       " 'no412.jpg',\n",
       " 'no413.jpg',\n",
       " 'no414.jpg',\n",
       " 'no415.jpg',\n",
       " 'no416.jpg',\n",
       " 'no417.jpg',\n",
       " 'no418.jpg',\n",
       " 'no419.jpg',\n",
       " 'no42.jpg',\n",
       " 'no420.jpg',\n",
       " 'no421.jpg',\n",
       " 'no422.jpg',\n",
       " 'no423.jpg',\n",
       " 'no424.jpg',\n",
       " 'no425.jpg',\n",
       " 'no426.jpg',\n",
       " 'no427.jpg',\n",
       " 'no428.jpg',\n",
       " 'no429.jpg',\n",
       " 'no43.jpg',\n",
       " 'no430.jpg',\n",
       " 'no431.jpg',\n",
       " 'no432.jpg',\n",
       " 'no433.jpg',\n",
       " 'no434.jpg',\n",
       " 'no435.jpg',\n",
       " 'no436.jpg',\n",
       " 'no437.jpg',\n",
       " 'no438.jpg',\n",
       " 'no439.jpg',\n",
       " 'no44.jpg',\n",
       " 'no440.jpg',\n",
       " 'no441.jpg',\n",
       " 'no442.jpg',\n",
       " 'no443.jpg',\n",
       " 'no444.jpg',\n",
       " 'no445.jpg',\n",
       " 'no446.jpg',\n",
       " 'no447.jpg',\n",
       " 'no448.jpg',\n",
       " 'no449.jpg',\n",
       " 'no45.jpg',\n",
       " 'no450.jpg',\n",
       " 'no451.jpg',\n",
       " 'no452.jpg',\n",
       " 'no453.jpg',\n",
       " 'no454.jpg',\n",
       " 'no455.jpg',\n",
       " 'no456.jpg',\n",
       " 'no457.jpg',\n",
       " 'no458.jpg',\n",
       " 'no459.jpg',\n",
       " 'no46.jpg',\n",
       " 'no460.jpg',\n",
       " 'no461.jpg',\n",
       " 'no462.jpg',\n",
       " 'no463.jpg',\n",
       " 'no464.jpg',\n",
       " 'no465.jpg',\n",
       " 'no466.jpg',\n",
       " 'no467.jpg',\n",
       " 'no468.jpg',\n",
       " 'no469.jpg',\n",
       " 'no47.jpg',\n",
       " 'no470.jpg',\n",
       " 'no471.jpg',\n",
       " 'no472.jpg',\n",
       " 'no473.jpg',\n",
       " 'no474.jpg',\n",
       " 'no475.jpg',\n",
       " 'no476.jpg',\n",
       " 'no477.jpg',\n",
       " 'no478.jpg',\n",
       " 'no479.jpg',\n",
       " 'no48.jpg',\n",
       " 'no480.jpg',\n",
       " 'no481.jpg',\n",
       " 'no482.jpg',\n",
       " 'no483.jpg',\n",
       " 'no484.jpg',\n",
       " 'no485.jpg',\n",
       " 'no486.jpg',\n",
       " 'no487.jpg',\n",
       " 'no488.jpg',\n",
       " 'no489.jpg',\n",
       " 'no49.jpg',\n",
       " 'no490.jpg',\n",
       " 'no491.jpg',\n",
       " 'no492.jpg',\n",
       " 'no493.jpg',\n",
       " 'no494.jpg',\n",
       " 'no495.jpg',\n",
       " 'no496.jpg',\n",
       " 'no497.jpg',\n",
       " 'no498.jpg',\n",
       " 'no499.jpg',\n",
       " 'no5.jpg',\n",
       " 'no50.jpg',\n",
       " 'no500.jpg',\n",
       " 'no501.jpg',\n",
       " 'no502.jpg',\n",
       " 'no503.jpg',\n",
       " 'no504.jpg',\n",
       " 'no505.jpg',\n",
       " 'no506.jpg',\n",
       " 'no507.jpg',\n",
       " 'no508.jpg',\n",
       " 'no509.jpg',\n",
       " 'no51.jpg',\n",
       " 'no510.jpg',\n",
       " 'no511.jpg',\n",
       " 'no512.jpg',\n",
       " 'no513.jpg',\n",
       " 'no514.jpg',\n",
       " 'no515.jpg',\n",
       " 'no516.jpg',\n",
       " 'no517.jpg',\n",
       " 'no518.jpg',\n",
       " 'no519.jpg',\n",
       " 'no52.jpg',\n",
       " 'no520.jpg',\n",
       " 'no521.jpg',\n",
       " 'no522.jpg',\n",
       " 'no523.jpg',\n",
       " 'no524.jpg',\n",
       " 'no525.jpg',\n",
       " 'no526.jpg',\n",
       " 'no527.jpg',\n",
       " 'no528.jpg',\n",
       " 'no529.jpg',\n",
       " 'no53.jpg',\n",
       " 'no530.jpg',\n",
       " 'no531.jpg',\n",
       " 'no532.jpg',\n",
       " 'no533.jpg',\n",
       " 'no534.jpg',\n",
       " 'no535.jpg',\n",
       " 'no536.jpg',\n",
       " 'no537.jpg',\n",
       " 'no538.jpg',\n",
       " 'no539.jpg',\n",
       " 'no54.jpg',\n",
       " 'no540.jpg',\n",
       " 'no541.jpg',\n",
       " 'no542.jpg',\n",
       " 'no543.jpg',\n",
       " 'no544.jpg',\n",
       " 'no545.jpg',\n",
       " 'no546.jpg',\n",
       " 'no547.jpg',\n",
       " 'no548.jpg',\n",
       " ...]"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list_dir(no_tumor)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Display the yes_tumor images in the directory"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['y0.jpg',\n",
       " 'y1.jpg',\n",
       " 'y10.jpg',\n",
       " 'y100.jpg',\n",
       " 'y1000.jpg',\n",
       " 'y1001.jpg',\n",
       " 'y1002.jpg',\n",
       " 'y1003.jpg',\n",
       " 'y1004.jpg',\n",
       " 'y1005.jpg',\n",
       " 'y1006.jpg',\n",
       " 'y1007.jpg',\n",
       " 'y1008.jpg',\n",
       " 'y1009.jpg',\n",
       " 'y101.jpg',\n",
       " 'y1010.jpg',\n",
       " 'y1011.jpg',\n",
       " 'y1012.jpg',\n",
       " 'y1013.jpg',\n",
       " 'y1014.jpg',\n",
       " 'y1015.jpg',\n",
       " 'y1016.jpg',\n",
       " 'y1017.jpg',\n",
       " 'y1018.jpg',\n",
       " 'y1019.jpg',\n",
       " 'y102.jpg',\n",
       " 'y1020.jpg',\n",
       " 'y1021.jpg',\n",
       " 'y1022.jpg',\n",
       " 'y1023.jpg',\n",
       " 'y1024.jpg',\n",
       " 'y1025.jpg',\n",
       " 'y1026.jpg',\n",
       " 'y1027.jpg',\n",
       " 'y1028.jpg',\n",
       " 'y1029.jpg',\n",
       " 'y103.jpg',\n",
       " 'y1030.jpg',\n",
       " 'y1031.jpg',\n",
       " 'y1032.jpg',\n",
       " 'y1033.jpg',\n",
       " 'y1034.jpg',\n",
       " 'y1035.jpg',\n",
       " 'y1036.jpg',\n",
       " 'y1037.jpg',\n",
       " 'y1038.jpg',\n",
       " 'y1039.jpg',\n",
       " 'y104.jpg',\n",
       " 'y1040.jpg',\n",
       " 'y1041.jpg',\n",
       " 'y1042.jpg',\n",
       " 'y1043.jpg',\n",
       " 'y1044.jpg',\n",
       " 'y1045.jpg',\n",
       " 'y1046.jpg',\n",
       " 'y1047.jpg',\n",
       " 'y1048.jpg',\n",
       " 'y1049.jpg',\n",
       " 'y105.jpg',\n",
       " 'y1050.jpg',\n",
       " 'y1051.jpg',\n",
       " 'y1052.jpg',\n",
       " 'y1053.jpg',\n",
       " 'y1054.jpg',\n",
       " 'y1055.jpg',\n",
       " 'y1056.jpg',\n",
       " 'y1057.jpg',\n",
       " 'y1058.jpg',\n",
       " 'y1059.jpg',\n",
       " 'y106.jpg',\n",
       " 'y1060.jpg',\n",
       " 'y1061.jpg',\n",
       " 'y1062.jpg',\n",
       " 'y1063.jpg',\n",
       " 'y1064.jpg',\n",
       " 'y1065.jpg',\n",
       " 'y1066.jpg',\n",
       " 'y1067.jpg',\n",
       " 'y1068.jpg',\n",
       " 'y1069.jpg',\n",
       " 'y107.jpg',\n",
       " 'y1070.jpg',\n",
       " 'y1071.jpg',\n",
       " 'y1072.jpg',\n",
       " 'y1073.jpg',\n",
       " 'y1074.jpg',\n",
       " 'y1075.jpg',\n",
       " 'y1076.jpg',\n",
       " 'y1077.jpg',\n",
       " 'y1078.jpg',\n",
       " 'y1079.jpg',\n",
       " 'y108.jpg',\n",
       " 'y1080.jpg',\n",
       " 'y1081.jpg',\n",
       " 'y1082.jpg',\n",
       " 'y1083.jpg',\n",
       " 'y1084.jpg',\n",
       " 'y1085.jpg',\n",
       " 'y1086.jpg',\n",
       " 'y1087.jpg',\n",
       " 'y1088.jpg',\n",
       " 'y1089.jpg',\n",
       " 'y109.jpg',\n",
       " 'y1090.jpg',\n",
       " 'y1091.jpg',\n",
       " 'y1092.jpg',\n",
       " 'y1093.jpg',\n",
       " 'y1094.jpg',\n",
       " 'y1095.jpg',\n",
       " 'y1096.jpg',\n",
       " 'y1097.jpg',\n",
       " 'y1098.jpg',\n",
       " 'y1099.jpg',\n",
       " 'y11.jpg',\n",
       " 'y110.jpg',\n",
       " 'y1100.jpg',\n",
       " 'y1101.jpg',\n",
       " 'y1102.jpg',\n",
       " 'y1103.jpg',\n",
       " 'y1104.jpg',\n",
       " 'y1105.jpg',\n",
       " 'y1106.jpg',\n",
       " 'y1107.jpg',\n",
       " 'y1108.jpg',\n",
       " 'y1109.jpg',\n",
       " 'y111.jpg',\n",
       " 'y1110.jpg',\n",
       " 'y1111.jpg',\n",
       " 'y1112.jpg',\n",
       " 'y1113.jpg',\n",
       " 'y1114.jpg',\n",
       " 'y1115.jpg',\n",
       " 'y1116.jpg',\n",
       " 'y1117.jpg',\n",
       " 'y1118.jpg',\n",
       " 'y1119.jpg',\n",
       " 'y112.jpg',\n",
       " 'y1120.jpg',\n",
       " 'y1121.jpg',\n",
       " 'y1122.jpg',\n",
       " 'y1123.jpg',\n",
       " 'y1124.jpg',\n",
       " 'y1125.jpg',\n",
       " 'y1126.jpg',\n",
       " 'y1127.jpg',\n",
       " 'y1128.jpg',\n",
       " 'y1129.jpg',\n",
       " 'y113.jpg',\n",
       " 'y1130.jpg',\n",
       " 'y1131.jpg',\n",
       " 'y1132.jpg',\n",
       " 'y1133.jpg',\n",
       " 'y1134.jpg',\n",
       " 'y1135.jpg',\n",
       " 'y1136.jpg',\n",
       " 'y1137.jpg',\n",
       " 'y1138.jpg',\n",
       " 'y1139.jpg',\n",
       " 'y114.jpg',\n",
       " 'y1140.jpg',\n",
       " 'y1141.jpg',\n",
       " 'y1142.jpg',\n",
       " 'y1143.jpg',\n",
       " 'y1144.jpg',\n",
       " 'y1145.jpg',\n",
       " 'y1146.jpg',\n",
       " 'y1147.jpg',\n",
       " 'y1148.jpg',\n",
       " 'y1149.jpg',\n",
       " 'y115.jpg',\n",
       " 'y1150.jpg',\n",
       " 'y1151.jpg',\n",
       " 'y1152.jpg',\n",
       " 'y1153.jpg',\n",
       " 'y1154.jpg',\n",
       " 'y1155.jpg',\n",
       " 'y1156.jpg',\n",
       " 'y1157.jpg',\n",
       " 'y1158.jpg',\n",
       " 'y1159.jpg',\n",
       " 'y116.jpg',\n",
       " 'y1160.jpg',\n",
       " 'y1161.jpg',\n",
       " 'y1162.jpg',\n",
       " 'y1163.jpg',\n",
       " 'y1164.jpg',\n",
       " 'y1165.jpg',\n",
       " 'y1166.jpg',\n",
       " 'y1167.jpg',\n",
       " 'y1168.jpg',\n",
       " 'y1169.jpg',\n",
       " 'y117.jpg',\n",
       " 'y1170.jpg',\n",
       " 'y1171.jpg',\n",
       " 'y1172.jpg',\n",
       " 'y1173.jpg',\n",
       " 'y1174.jpg',\n",
       " 'y1175.jpg',\n",
       " 'y1176.jpg',\n",
       " 'y1177.jpg',\n",
       " 'y1178.jpg',\n",
       " 'y1179.jpg',\n",
       " 'y118.jpg',\n",
       " 'y1180.jpg',\n",
       " 'y1181.jpg',\n",
       " 'y1182.jpg',\n",
       " 'y1183.jpg',\n",
       " 'y1184.jpg',\n",
       " 'y1185.jpg',\n",
       " 'y1186.jpg',\n",
       " 'y1187.jpg',\n",
       " 'y1188.jpg',\n",
       " 'y1189.jpg',\n",
       " 'y119.jpg',\n",
       " 'y1190.jpg',\n",
       " 'y1191.jpg',\n",
       " 'y1192.jpg',\n",
       " 'y1193.jpg',\n",
       " 'y1194.jpg',\n",
       " 'y1195.jpg',\n",
       " 'y1196.jpg',\n",
       " 'y1197.jpg',\n",
       " 'y1198.jpg',\n",
       " 'y1199.jpg',\n",
       " 'y12.jpg',\n",
       " 'y120.jpg',\n",
       " 'y1200.jpg',\n",
       " 'y1201.jpg',\n",
       " 'y1202.jpg',\n",
       " 'y1203.jpg',\n",
       " 'y1204.jpg',\n",
       " 'y1205.jpg',\n",
       " 'y1206.jpg',\n",
       " 'y1207.jpg',\n",
       " 'y1208.jpg',\n",
       " 'y1209.jpg',\n",
       " 'y121.jpg',\n",
       " 'y1210.jpg',\n",
       " 'y1211.jpg',\n",
       " 'y1212.jpg',\n",
       " 'y1213.jpg',\n",
       " 'y1214.jpg',\n",
       " 'y1215.jpg',\n",
       " 'y1216.jpg',\n",
       " 'y1217.jpg',\n",
       " 'y1218.jpg',\n",
       " 'y1219.jpg',\n",
       " 'y122.jpg',\n",
       " 'y1220.jpg',\n",
       " 'y1221.jpg',\n",
       " 'y1222.jpg',\n",
       " 'y1223.jpg',\n",
       " 'y1224.jpg',\n",
       " 'y1225.jpg',\n",
       " 'y1226.jpg',\n",
       " 'y1227.jpg',\n",
       " 'y1228.jpg',\n",
       " 'y1229.jpg',\n",
       " 'y123.jpg',\n",
       " 'y1230.jpg',\n",
       " 'y1231.jpg',\n",
       " 'y1232.jpg',\n",
       " 'y1233.jpg',\n",
       " 'y1234.jpg',\n",
       " 'y1235.jpg',\n",
       " 'y1236.jpg',\n",
       " 'y1237.jpg',\n",
       " 'y1238.jpg',\n",
       " 'y1239.jpg',\n",
       " 'y124.jpg',\n",
       " 'y1240.jpg',\n",
       " 'y1241.jpg',\n",
       " 'y1242.jpg',\n",
       " 'y1243.jpg',\n",
       " 'y1244.jpg',\n",
       " 'y1245.jpg',\n",
       " 'y1246.jpg',\n",
       " 'y1247.jpg',\n",
       " 'y1248.jpg',\n",
       " 'y1249.jpg',\n",
       " 'y125.jpg',\n",
       " 'y1250.jpg',\n",
       " 'y1251.jpg',\n",
       " 'y1252.jpg',\n",
       " 'y1253.jpg',\n",
       " 'y1254.jpg',\n",
       " 'y1255.jpg',\n",
       " 'y1256.jpg',\n",
       " 'y1257.jpg',\n",
       " 'y1258.jpg',\n",
       " 'y1259.jpg',\n",
       " 'y126.jpg',\n",
       " 'y1260.jpg',\n",
       " 'y1261.jpg',\n",
       " 'y1262.jpg',\n",
       " 'y1263.jpg',\n",
       " 'y1264.jpg',\n",
       " 'y1265.jpg',\n",
       " 'y1266.jpg',\n",
       " 'y1267.jpg',\n",
       " 'y1268.jpg',\n",
       " 'y1269.jpg',\n",
       " 'y127.jpg',\n",
       " 'y1270.jpg',\n",
       " 'y1271.jpg',\n",
       " 'y1272.jpg',\n",
       " 'y1273.jpg',\n",
       " 'y1274.jpg',\n",
       " 'y1275.jpg',\n",
       " 'y1276.jpg',\n",
       " 'y1277.jpg',\n",
       " 'y1278.jpg',\n",
       " 'y1279.jpg',\n",
       " 'y128.jpg',\n",
       " 'y1280.jpg',\n",
       " 'y1281.jpg',\n",
       " 'y1282.jpg',\n",
       " 'y1283.jpg',\n",
       " 'y1284.jpg',\n",
       " 'y1285.jpg',\n",
       " 'y1286.jpg',\n",
       " 'y1287.jpg',\n",
       " 'y1288.jpg',\n",
       " 'y1289.jpg',\n",
       " 'y129.jpg',\n",
       " 'y1290.jpg',\n",
       " 'y1291.jpg',\n",
       " 'y1292.jpg',\n",
       " 'y1293.jpg',\n",
       " 'y1294.jpg',\n",
       " 'y1295.jpg',\n",
       " 'y1296.jpg',\n",
       " 'y1297.jpg',\n",
       " 'y1298.jpg',\n",
       " 'y1299.jpg',\n",
       " 'y13.jpg',\n",
       " 'y130.jpg',\n",
       " 'y1300.jpg',\n",
       " 'y1301.jpg',\n",
       " 'y1302.jpg',\n",
       " 'y1303.jpg',\n",
       " 'y1304.jpg',\n",
       " 'y1305.jpg',\n",
       " 'y1306.jpg',\n",
       " 'y1307.jpg',\n",
       " 'y1308.jpg',\n",
       " 'y1309.jpg',\n",
       " 'y131.jpg',\n",
       " 'y1310.jpg',\n",
       " 'y1311.jpg',\n",
       " 'y1312.jpg',\n",
       " 'y1313.jpg',\n",
       " 'y1314.jpg',\n",
       " 'y1315.jpg',\n",
       " 'y1316.jpg',\n",
       " 'y1317.jpg',\n",
       " 'y1318.jpg',\n",
       " 'y1319.jpg',\n",
       " 'y132.jpg',\n",
       " 'y1320.jpg',\n",
       " 'y1321.jpg',\n",
       " 'y1322.jpg',\n",
       " 'y1323.jpg',\n",
       " 'y1324.jpg',\n",
       " 'y1325.jpg',\n",
       " 'y1326.jpg',\n",
       " 'y1327.jpg',\n",
       " 'y1328.jpg',\n",
       " 'y1329.jpg',\n",
       " 'y133.jpg',\n",
       " 'y1330.jpg',\n",
       " 'y1331.jpg',\n",
       " 'y1332.jpg',\n",
       " 'y1333.jpg',\n",
       " 'y1334.jpg',\n",
       " 'y1335.jpg',\n",
       " 'y1336.jpg',\n",
       " 'y1337.jpg',\n",
       " 'y1338.jpg',\n",
       " 'y1339.jpg',\n",
       " 'y134.jpg',\n",
       " 'y1340.jpg',\n",
       " 'y1341.jpg',\n",
       " 'y1342.jpg',\n",
       " 'y1343.jpg',\n",
       " 'y1344.jpg',\n",
       " 'y1345.jpg',\n",
       " 'y1346.jpg',\n",
       " 'y1347.jpg',\n",
       " 'y1348.jpg',\n",
       " 'y1349.jpg',\n",
       " 'y135.jpg',\n",
       " 'y1350.jpg',\n",
       " 'y1351.jpg',\n",
       " 'y1352.jpg',\n",
       " 'y1353.jpg',\n",
       " 'y1354.jpg',\n",
       " 'y1355.jpg',\n",
       " 'y1356.jpg',\n",
       " 'y1357.jpg',\n",
       " 'y1358.jpg',\n",
       " 'y1359.jpg',\n",
       " 'y136.jpg',\n",
       " 'y1360.jpg',\n",
       " 'y1361.jpg',\n",
       " 'y1362.jpg',\n",
       " 'y1363.jpg',\n",
       " 'y1364.jpg',\n",
       " 'y1365.jpg',\n",
       " 'y1366.jpg',\n",
       " 'y1367.jpg',\n",
       " 'y1368.jpg',\n",
       " 'y1369.jpg',\n",
       " 'y137.jpg',\n",
       " 'y1370.jpg',\n",
       " 'y1371.jpg',\n",
       " 'y1372.jpg',\n",
       " 'y1373.jpg',\n",
       " 'y1374.jpg',\n",
       " 'y1375.jpg',\n",
       " 'y1376.jpg',\n",
       " 'y1377.jpg',\n",
       " 'y1378.jpg',\n",
       " 'y1379.jpg',\n",
       " 'y138.jpg',\n",
       " 'y1380.jpg',\n",
       " 'y1381.jpg',\n",
       " 'y1382.jpg',\n",
       " 'y1383.jpg',\n",
       " 'y1384.jpg',\n",
       " 'y1385.jpg',\n",
       " 'y1386.jpg',\n",
       " 'y1387.jpg',\n",
       " 'y1388.jpg',\n",
       " 'y1389.jpg',\n",
       " 'y139.jpg',\n",
       " 'y1390.jpg',\n",
       " 'y1391.jpg',\n",
       " 'y1392.jpg',\n",
       " 'y1393.jpg',\n",
       " 'y1394.jpg',\n",
       " 'y1395.jpg',\n",
       " 'y1396.jpg',\n",
       " 'y1397.jpg',\n",
       " 'y1398.jpg',\n",
       " 'y1399.jpg',\n",
       " 'y14.jpg',\n",
       " 'y140.jpg',\n",
       " 'y1400.jpg',\n",
       " 'y1401.jpg',\n",
       " 'y1402.jpg',\n",
       " 'y1403.jpg',\n",
       " 'y1404.jpg',\n",
       " 'y1405.jpg',\n",
       " 'y1406.jpg',\n",
       " 'y1407.jpg',\n",
       " 'y1408.jpg',\n",
       " 'y1409.jpg',\n",
       " 'y141.jpg',\n",
       " 'y1410.jpg',\n",
       " 'y1411.jpg',\n",
       " 'y1412.jpg',\n",
       " 'y1413.jpg',\n",
       " 'y1414.jpg',\n",
       " 'y1415.jpg',\n",
       " 'y1416.jpg',\n",
       " 'y1417.jpg',\n",
       " 'y1418.jpg',\n",
       " 'y1419.jpg',\n",
       " 'y142.jpg',\n",
       " 'y1420.jpg',\n",
       " 'y1421.jpg',\n",
       " 'y1422.jpg',\n",
       " 'y1423.jpg',\n",
       " 'y1424.jpg',\n",
       " 'y1425.jpg',\n",
       " 'y1426.jpg',\n",
       " 'y1427.jpg',\n",
       " 'y1428.jpg',\n",
       " 'y1429.jpg',\n",
       " 'y143.jpg',\n",
       " 'y1430.jpg',\n",
       " 'y1431.jpg',\n",
       " 'y1432.jpg',\n",
       " 'y1433.jpg',\n",
       " 'y1434.jpg',\n",
       " 'y1435.jpg',\n",
       " 'y1436.jpg',\n",
       " 'y1437.jpg',\n",
       " 'y1438.jpg',\n",
       " 'y1439.jpg',\n",
       " 'y144.jpg',\n",
       " 'y1440.jpg',\n",
       " 'y1441.jpg',\n",
       " 'y1442.jpg',\n",
       " 'y1443.jpg',\n",
       " 'y1444.jpg',\n",
       " 'y1445.jpg',\n",
       " 'y1446.jpg',\n",
       " 'y1447.jpg',\n",
       " 'y1448.jpg',\n",
       " 'y1449.jpg',\n",
       " 'y145.jpg',\n",
       " 'y1450.jpg',\n",
       " 'y1451.jpg',\n",
       " 'y1452.jpg',\n",
       " 'y1453.jpg',\n",
       " 'y1454.jpg',\n",
       " 'y1455.jpg',\n",
       " 'y1456.jpg',\n",
       " 'y1457.jpg',\n",
       " 'y1458.jpg',\n",
       " 'y1459.jpg',\n",
       " 'y146.jpg',\n",
       " 'y1460.jpg',\n",
       " 'y1461.jpg',\n",
       " 'y1462.jpg',\n",
       " 'y1463.jpg',\n",
       " 'y1464.jpg',\n",
       " 'y1465.jpg',\n",
       " 'y1466.jpg',\n",
       " 'y1467.jpg',\n",
       " 'y1468.jpg',\n",
       " 'y1469.jpg',\n",
       " 'y147.jpg',\n",
       " 'y1470.jpg',\n",
       " 'y1471.jpg',\n",
       " 'y1472.jpg',\n",
       " 'y1473.jpg',\n",
       " 'y1474.jpg',\n",
       " 'y1475.jpg',\n",
       " 'y1476.jpg',\n",
       " 'y1477.jpg',\n",
       " 'y1478.jpg',\n",
       " 'y1479.jpg',\n",
       " 'y148.jpg',\n",
       " 'y1480.jpg',\n",
       " 'y1481.jpg',\n",
       " 'y1482.jpg',\n",
       " 'y1483.jpg',\n",
       " 'y1484.jpg',\n",
       " 'y1485.jpg',\n",
       " 'y1486.jpg',\n",
       " 'y1487.jpg',\n",
       " 'y1488.jpg',\n",
       " 'y1489.jpg',\n",
       " 'y149.jpg',\n",
       " 'y1490.jpg',\n",
       " 'y1491.jpg',\n",
       " 'y1492.jpg',\n",
       " 'y1493.jpg',\n",
       " 'y1494.jpg',\n",
       " 'y1495.jpg',\n",
       " 'y1496.jpg',\n",
       " 'y1497.jpg',\n",
       " 'y1498.jpg',\n",
       " 'y1499.jpg',\n",
       " 'y15.jpg',\n",
       " 'y150.jpg',\n",
       " 'y151.jpg',\n",
       " 'y152.jpg',\n",
       " 'y153.jpg',\n",
       " 'y154.jpg',\n",
       " 'y155.jpg',\n",
       " 'y156.jpg',\n",
       " 'y157.jpg',\n",
       " 'y158.jpg',\n",
       " 'y159.jpg',\n",
       " 'y16.jpg',\n",
       " 'y160.jpg',\n",
       " 'y161.jpg',\n",
       " 'y162.jpg',\n",
       " 'y163.jpg',\n",
       " 'y164.jpg',\n",
       " 'y165.jpg',\n",
       " 'y166.jpg',\n",
       " 'y167.jpg',\n",
       " 'y168.jpg',\n",
       " 'y169.jpg',\n",
       " 'y17.jpg',\n",
       " 'y170.jpg',\n",
       " 'y171.jpg',\n",
       " 'y172.jpg',\n",
       " 'y173.jpg',\n",
       " 'y174.jpg',\n",
       " 'y175.jpg',\n",
       " 'y176.jpg',\n",
       " 'y177.jpg',\n",
       " 'y178.jpg',\n",
       " 'y179.jpg',\n",
       " 'y18.jpg',\n",
       " 'y180.jpg',\n",
       " 'y181.jpg',\n",
       " 'y182.jpg',\n",
       " 'y183.jpg',\n",
       " 'y184.jpg',\n",
       " 'y185.jpg',\n",
       " 'y186.jpg',\n",
       " 'y187.jpg',\n",
       " 'y188.jpg',\n",
       " 'y189.jpg',\n",
       " 'y19.jpg',\n",
       " 'y190.jpg',\n",
       " 'y191.jpg',\n",
       " 'y192.jpg',\n",
       " 'y193.jpg',\n",
       " 'y194.jpg',\n",
       " 'y195.jpg',\n",
       " 'y196.jpg',\n",
       " 'y197.jpg',\n",
       " 'y198.jpg',\n",
       " 'y199.jpg',\n",
       " 'y2.jpg',\n",
       " 'y20.jpg',\n",
       " 'y200.jpg',\n",
       " 'y201.jpg',\n",
       " 'y202.jpg',\n",
       " 'y203.jpg',\n",
       " 'y204.jpg',\n",
       " 'y205.jpg',\n",
       " 'y206.jpg',\n",
       " 'y207.jpg',\n",
       " 'y208.jpg',\n",
       " 'y209.jpg',\n",
       " 'y21.jpg',\n",
       " 'y210.jpg',\n",
       " 'y211.jpg',\n",
       " 'y212.jpg',\n",
       " 'y213.jpg',\n",
       " 'y214.jpg',\n",
       " 'y215.jpg',\n",
       " 'y216.jpg',\n",
       " 'y217.jpg',\n",
       " 'y218.jpg',\n",
       " 'y219.jpg',\n",
       " 'y22.jpg',\n",
       " 'y220.jpg',\n",
       " 'y221.jpg',\n",
       " 'y222.jpg',\n",
       " 'y223.jpg',\n",
       " 'y224.jpg',\n",
       " 'y225.jpg',\n",
       " 'y226.jpg',\n",
       " 'y227.jpg',\n",
       " 'y228.jpg',\n",
       " 'y229.jpg',\n",
       " 'y23.jpg',\n",
       " 'y230.jpg',\n",
       " 'y231.jpg',\n",
       " 'y232.jpg',\n",
       " 'y233.jpg',\n",
       " 'y234.jpg',\n",
       " 'y235.jpg',\n",
       " 'y236.jpg',\n",
       " 'y237.jpg',\n",
       " 'y238.jpg',\n",
       " 'y239.jpg',\n",
       " 'y24.jpg',\n",
       " 'y240.jpg',\n",
       " 'y241.jpg',\n",
       " 'y242.jpg',\n",
       " 'y243.jpg',\n",
       " 'y244.jpg',\n",
       " 'y245.jpg',\n",
       " 'y246.jpg',\n",
       " 'y247.jpg',\n",
       " 'y248.jpg',\n",
       " 'y249.jpg',\n",
       " 'y25.jpg',\n",
       " 'y250.jpg',\n",
       " 'y251.jpg',\n",
       " 'y252.jpg',\n",
       " 'y253.jpg',\n",
       " 'y254.jpg',\n",
       " 'y255.jpg',\n",
       " 'y256.jpg',\n",
       " 'y257.jpg',\n",
       " 'y258.jpg',\n",
       " 'y259.jpg',\n",
       " 'y26.jpg',\n",
       " 'y260.jpg',\n",
       " 'y261.jpg',\n",
       " 'y262.jpg',\n",
       " 'y263.jpg',\n",
       " 'y264.jpg',\n",
       " 'y265.jpg',\n",
       " 'y266.jpg',\n",
       " 'y267.jpg',\n",
       " 'y268.jpg',\n",
       " 'y269.jpg',\n",
       " 'y27.jpg',\n",
       " 'y270.jpg',\n",
       " 'y271.jpg',\n",
       " 'y272.jpg',\n",
       " 'y273.jpg',\n",
       " 'y274.jpg',\n",
       " 'y275.jpg',\n",
       " 'y276.jpg',\n",
       " 'y277.jpg',\n",
       " 'y278.jpg',\n",
       " 'y279.jpg',\n",
       " 'y28.jpg',\n",
       " 'y280.jpg',\n",
       " 'y281.jpg',\n",
       " 'y282.jpg',\n",
       " 'y283.jpg',\n",
       " 'y284.jpg',\n",
       " 'y285.jpg',\n",
       " 'y286.jpg',\n",
       " 'y287.jpg',\n",
       " 'y288.jpg',\n",
       " 'y289.jpg',\n",
       " 'y29.jpg',\n",
       " 'y290.jpg',\n",
       " 'y291.jpg',\n",
       " 'y292.jpg',\n",
       " 'y293.jpg',\n",
       " 'y294.jpg',\n",
       " 'y295.jpg',\n",
       " 'y296.jpg',\n",
       " 'y297.jpg',\n",
       " 'y298.jpg',\n",
       " 'y299.jpg',\n",
       " 'y3.jpg',\n",
       " 'y30.jpg',\n",
       " 'y300.jpg',\n",
       " 'y301.jpg',\n",
       " 'y302.jpg',\n",
       " 'y303.jpg',\n",
       " 'y304.jpg',\n",
       " 'y305.jpg',\n",
       " 'y306.jpg',\n",
       " 'y307.jpg',\n",
       " 'y308.jpg',\n",
       " 'y309.jpg',\n",
       " 'y31.jpg',\n",
       " 'y310.jpg',\n",
       " 'y311.jpg',\n",
       " 'y312.jpg',\n",
       " 'y313.jpg',\n",
       " 'y314.jpg',\n",
       " 'y315.jpg',\n",
       " 'y316.jpg',\n",
       " 'y317.jpg',\n",
       " 'y318.jpg',\n",
       " 'y319.jpg',\n",
       " 'y32.jpg',\n",
       " 'y320.jpg',\n",
       " 'y321.jpg',\n",
       " 'y322.jpg',\n",
       " 'y323.jpg',\n",
       " 'y324.jpg',\n",
       " 'y325.jpg',\n",
       " 'y326.jpg',\n",
       " 'y327.jpg',\n",
       " 'y328.jpg',\n",
       " 'y329.jpg',\n",
       " 'y33.jpg',\n",
       " 'y330.jpg',\n",
       " 'y331.jpg',\n",
       " 'y332.jpg',\n",
       " 'y333.jpg',\n",
       " 'y334.jpg',\n",
       " 'y335.jpg',\n",
       " 'y336.jpg',\n",
       " 'y337.jpg',\n",
       " 'y338.jpg',\n",
       " 'y339.jpg',\n",
       " 'y34.jpg',\n",
       " 'y340.jpg',\n",
       " 'y341.jpg',\n",
       " 'y342.jpg',\n",
       " 'y343.jpg',\n",
       " 'y344.jpg',\n",
       " 'y345.jpg',\n",
       " 'y346.jpg',\n",
       " 'y347.jpg',\n",
       " 'y348.jpg',\n",
       " 'y349.jpg',\n",
       " 'y35.jpg',\n",
       " 'y350.jpg',\n",
       " 'y351.jpg',\n",
       " 'y352.jpg',\n",
       " 'y353.jpg',\n",
       " 'y354.jpg',\n",
       " 'y355.jpg',\n",
       " 'y356.jpg',\n",
       " 'y357.jpg',\n",
       " 'y358.jpg',\n",
       " 'y359.jpg',\n",
       " 'y36.jpg',\n",
       " 'y360.jpg',\n",
       " 'y361.jpg',\n",
       " 'y362.jpg',\n",
       " 'y363.jpg',\n",
       " 'y364.jpg',\n",
       " 'y365.jpg',\n",
       " 'y366.jpg',\n",
       " 'y367.jpg',\n",
       " 'y368.jpg',\n",
       " 'y369.jpg',\n",
       " 'y37.jpg',\n",
       " 'y370.jpg',\n",
       " 'y371.jpg',\n",
       " 'y372.jpg',\n",
       " 'y373.jpg',\n",
       " 'y374.jpg',\n",
       " 'y375.jpg',\n",
       " 'y376.jpg',\n",
       " 'y377.jpg',\n",
       " 'y378.jpg',\n",
       " 'y379.jpg',\n",
       " 'y38.jpg',\n",
       " 'y380.jpg',\n",
       " 'y381.jpg',\n",
       " 'y382.jpg',\n",
       " 'y383.jpg',\n",
       " 'y384.jpg',\n",
       " 'y385.jpg',\n",
       " 'y386.jpg',\n",
       " 'y387.jpg',\n",
       " 'y388.jpg',\n",
       " 'y389.jpg',\n",
       " 'y39.jpg',\n",
       " 'y390.jpg',\n",
       " 'y391.jpg',\n",
       " 'y392.jpg',\n",
       " 'y393.jpg',\n",
       " 'y394.jpg',\n",
       " 'y395.jpg',\n",
       " 'y396.jpg',\n",
       " 'y397.jpg',\n",
       " 'y398.jpg',\n",
       " 'y399.jpg',\n",
       " 'y4.jpg',\n",
       " 'y40.jpg',\n",
       " 'y400.jpg',\n",
       " 'y401.jpg',\n",
       " 'y402.jpg',\n",
       " 'y403.jpg',\n",
       " 'y404.jpg',\n",
       " 'y405.jpg',\n",
       " 'y406.jpg',\n",
       " 'y407.jpg',\n",
       " 'y408.jpg',\n",
       " 'y409.jpg',\n",
       " 'y41.jpg',\n",
       " 'y410.jpg',\n",
       " 'y411.jpg',\n",
       " 'y412.jpg',\n",
       " 'y413.jpg',\n",
       " 'y414.jpg',\n",
       " 'y415.jpg',\n",
       " 'y416.jpg',\n",
       " 'y417.jpg',\n",
       " 'y418.jpg',\n",
       " 'y419.jpg',\n",
       " 'y42.jpg',\n",
       " 'y420.jpg',\n",
       " 'y421.jpg',\n",
       " 'y422.jpg',\n",
       " 'y423.jpg',\n",
       " 'y424.jpg',\n",
       " 'y425.jpg',\n",
       " 'y426.jpg',\n",
       " 'y427.jpg',\n",
       " 'y428.jpg',\n",
       " 'y429.jpg',\n",
       " 'y43.jpg',\n",
       " 'y430.jpg',\n",
       " 'y431.jpg',\n",
       " 'y432.jpg',\n",
       " 'y433.jpg',\n",
       " 'y434.jpg',\n",
       " 'y435.jpg',\n",
       " 'y436.jpg',\n",
       " 'y437.jpg',\n",
       " 'y438.jpg',\n",
       " 'y439.jpg',\n",
       " 'y44.jpg',\n",
       " 'y440.jpg',\n",
       " 'y441.jpg',\n",
       " 'y442.jpg',\n",
       " 'y443.jpg',\n",
       " 'y444.jpg',\n",
       " 'y445.jpg',\n",
       " 'y446.jpg',\n",
       " 'y447.jpg',\n",
       " 'y448.jpg',\n",
       " 'y449.jpg',\n",
       " 'y45.jpg',\n",
       " 'y450.jpg',\n",
       " 'y451.jpg',\n",
       " 'y452.jpg',\n",
       " 'y453.jpg',\n",
       " 'y454.jpg',\n",
       " 'y455.jpg',\n",
       " 'y456.jpg',\n",
       " 'y457.jpg',\n",
       " 'y458.jpg',\n",
       " 'y459.jpg',\n",
       " 'y46.jpg',\n",
       " 'y460.jpg',\n",
       " 'y461.jpg',\n",
       " 'y462.jpg',\n",
       " 'y463.jpg',\n",
       " 'y464.jpg',\n",
       " 'y465.jpg',\n",
       " 'y466.jpg',\n",
       " 'y467.jpg',\n",
       " 'y468.jpg',\n",
       " 'y469.jpg',\n",
       " 'y47.jpg',\n",
       " 'y470.jpg',\n",
       " 'y471.jpg',\n",
       " 'y472.jpg',\n",
       " 'y473.jpg',\n",
       " 'y474.jpg',\n",
       " 'y475.jpg',\n",
       " 'y476.jpg',\n",
       " 'y477.jpg',\n",
       " 'y478.jpg',\n",
       " 'y479.jpg',\n",
       " 'y48.jpg',\n",
       " 'y480.jpg',\n",
       " 'y481.jpg',\n",
       " 'y482.jpg',\n",
       " 'y483.jpg',\n",
       " 'y484.jpg',\n",
       " 'y485.jpg',\n",
       " 'y486.jpg',\n",
       " 'y487.jpg',\n",
       " 'y488.jpg',\n",
       " 'y489.jpg',\n",
       " 'y49.jpg',\n",
       " 'y490.jpg',\n",
       " 'y491.jpg',\n",
       " 'y492.jpg',\n",
       " 'y493.jpg',\n",
       " 'y494.jpg',\n",
       " 'y495.jpg',\n",
       " 'y496.jpg',\n",
       " 'y497.jpg',\n",
       " 'y498.jpg',\n",
       " 'y499.jpg',\n",
       " 'y5.jpg',\n",
       " 'y50.jpg',\n",
       " 'y500.jpg',\n",
       " 'y501.jpg',\n",
       " 'y502.jpg',\n",
       " 'y503.jpg',\n",
       " 'y504.jpg',\n",
       " 'y505.jpg',\n",
       " 'y506.jpg',\n",
       " 'y507.jpg',\n",
       " 'y508.jpg',\n",
       " 'y509.jpg',\n",
       " 'y51.jpg',\n",
       " 'y510.jpg',\n",
       " 'y511.jpg',\n",
       " 'y512.jpg',\n",
       " 'y513.jpg',\n",
       " 'y514.jpg',\n",
       " 'y515.jpg',\n",
       " 'y516.jpg',\n",
       " 'y517.jpg',\n",
       " 'y518.jpg',\n",
       " 'y519.jpg',\n",
       " 'y52.jpg',\n",
       " 'y520.jpg',\n",
       " 'y521.jpg',\n",
       " 'y522.jpg',\n",
       " 'y523.jpg',\n",
       " 'y524.jpg',\n",
       " 'y525.jpg',\n",
       " 'y526.jpg',\n",
       " 'y527.jpg',\n",
       " 'y528.jpg',\n",
       " 'y529.jpg',\n",
       " 'y53.jpg',\n",
       " 'y530.jpg',\n",
       " 'y531.jpg',\n",
       " 'y532.jpg',\n",
       " 'y533.jpg',\n",
       " 'y534.jpg',\n",
       " 'y535.jpg',\n",
       " 'y536.jpg',\n",
       " 'y537.jpg',\n",
       " 'y538.jpg',\n",
       " 'y539.jpg',\n",
       " 'y54.jpg',\n",
       " 'y540.jpg',\n",
       " 'y541.jpg',\n",
       " 'y542.jpg',\n",
       " 'y543.jpg',\n",
       " 'y544.jpg',\n",
       " 'y545.jpg',\n",
       " 'y546.jpg',\n",
       " 'y547.jpg',\n",
       " 'y548.jpg',\n",
       " ...]"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list_dir(yes_tumor)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Display the pred_tumor images in the directory"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['pred0.jpg',\n",
       " 'pred1.jpg',\n",
       " 'pred10.jpg',\n",
       " 'pred11.jpg',\n",
       " 'pred12.jpg',\n",
       " 'pred13.jpg',\n",
       " 'pred14.jpg',\n",
       " 'pred15.jpg',\n",
       " 'pred16.jpg',\n",
       " 'pred17.jpg',\n",
       " 'pred18.jpg',\n",
       " 'pred19.jpg',\n",
       " 'pred2.jpg',\n",
       " 'pred20.jpg',\n",
       " 'pred21.jpg',\n",
       " 'pred22.jpg',\n",
       " 'pred23.jpg',\n",
       " 'pred24.jpg',\n",
       " 'pred25.jpg',\n",
       " 'pred26.jpg',\n",
       " 'pred27.jpg',\n",
       " 'pred28.jpg',\n",
       " 'pred29.jpg',\n",
       " 'pred3.jpg',\n",
       " 'pred30.jpg',\n",
       " 'pred31.jpg',\n",
       " 'pred32.jpg',\n",
       " 'pred33.jpg',\n",
       " 'pred34.jpg',\n",
       " 'pred35.jpg',\n",
       " 'pred36.jpg',\n",
       " 'pred37.jpg',\n",
       " 'pred38.jpg',\n",
       " 'pred39.jpg',\n",
       " 'pred4.jpg',\n",
       " 'pred40.jpg',\n",
       " 'pred41.jpg',\n",
       " 'pred42.jpg',\n",
       " 'pred43.jpg',\n",
       " 'pred44.jpg',\n",
       " 'pred45.jpg',\n",
       " 'pred46.jpg',\n",
       " 'pred47.jpg',\n",
       " 'pred48.jpg',\n",
       " 'pred49.jpg',\n",
       " 'pred5.jpg',\n",
       " 'pred50.jpg',\n",
       " 'pred51.jpg',\n",
       " 'pred52.jpg',\n",
       " 'pred53.jpg',\n",
       " 'pred54.jpg',\n",
       " 'pred55.jpg',\n",
       " 'pred56.jpg',\n",
       " 'pred57.jpg',\n",
       " 'pred58.jpg',\n",
       " 'pred59.jpg',\n",
       " 'pred6.jpg',\n",
       " 'pred7.jpg',\n",
       " 'pred8.jpg',\n",
       " 'pred9.jpg']"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list_dir(pred_tumor)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "ename": "IndexError",
     "evalue": "list index out of range",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mIndexError\u001b[0m                                Traceback (most recent call last)",
      "Input \u001b[1;32mIn [102]\u001b[0m, in \u001b[0;36m<cell line: 19>\u001b[1;34m()\u001b[0m\n\u001b[0;32m     17\u001b[0m             \u001b[38;5;28;01mreturn\u001b[39;00m label, dataset\n\u001b[0;32m     19\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m index, image_name \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28menumerate\u001b[39m(list_dir(no_tumor)):\n\u001b[1;32m---> 20\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m(\u001b[43mimage_name\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43msplit\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43m,\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;241;43m1\u001b[39;49m\u001b[43m]\u001b[49m\u001b[38;5;241m==\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mjpg\u001b[39m\u001b[38;5;124m'\u001b[39m):\n\u001b[0;32m     21\u001b[0m         image\u001b[38;5;241m=\u001b[39mcv2\u001b[38;5;241m.\u001b[39mimread((list_dir(no_tumor))\u001b[38;5;241m+\u001b[39mimg_dir)\n\u001b[0;32m     22\u001b[0m         image\u001b[38;5;241m=\u001b[39mImage\u001b[38;5;241m.\u001b[39mfromarray(image, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mRGB\u001b[39m\u001b[38;5;124m'\u001b[39m)\n",
      "\u001b[1;31mIndexError\u001b[0m: list index out of range"
     ]
    }
   ],
   "source": [
    "#path = 'no0.jpg'\n",
    "\n",
    "#print(path.split('.')[1])\n",
    "\n",
    "dataset = []\n",
    "label = []\n",
    "\n",
    "def label_image(images):\n",
    "    for index, image_name in enumerate(images):\n",
    "        if(image_name.split(',')[1]=='jpg'):\n",
    "            image = cv2.imread(images + image_name)\n",
    "            image = Image.fromarray(image, 'RGB')\n",
    "            image = image.resize((64,64))\n",
    "            dataset.append(np.array(image))\n",
    "            label.appemd(0)\n",
    "        \n",
    "            return label, dataset\n",
    "\n",
    "for index, image_name in enumerate(list_dir(no_tumor)):\n",
    "    if(image_name.split(',')[1]=='jpg'):\n",
    "        image=cv2.imread((list_dir(no_tumor))+img_dir)\n",
    "        image=Image.fromarray(image, 'RGB')\n",
    "        image = image.resize((64,64))\n",
    "        dataset.append(np.array(image))\n",
    "        label.append(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "ename": "IndexError",
     "evalue": "list index out of range",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mIndexError\u001b[0m                                Traceback (most recent call last)",
      "Input \u001b[1;32mIn [98]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mlabel_image\u001b[49m\u001b[43m(\u001b[49m\u001b[43mlist_dir\u001b[49m\u001b[43m(\u001b[49m\u001b[43mno_tumor\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\n",
      "Input \u001b[1;32mIn [97]\u001b[0m, in \u001b[0;36mlabel_image\u001b[1;34m(images)\u001b[0m\n\u001b[0;32m      8\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mlabel_image\u001b[39m(images):\n\u001b[0;32m      9\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m index, image_name \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28menumerate\u001b[39m(images):\n\u001b[1;32m---> 10\u001b[0m         \u001b[38;5;28;01mif\u001b[39;00m(\u001b[43mimage_name\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43msplit\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43m,\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;241;43m1\u001b[39;49m\u001b[43m]\u001b[49m\u001b[38;5;241m==\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mjpg\u001b[39m\u001b[38;5;124m'\u001b[39m):\n\u001b[0;32m     11\u001b[0m             image \u001b[38;5;241m=\u001b[39m cv2\u001b[38;5;241m.\u001b[39mimread(images \u001b[38;5;241m+\u001b[39m image_name)\n\u001b[0;32m     12\u001b[0m             image \u001b[38;5;241m=\u001b[39m Image\u001b[38;5;241m.\u001b[39mfromarray(image, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mRGB\u001b[39m\u001b[38;5;124m'\u001b[39m)\n",
      "\u001b[1;31mIndexError\u001b[0m: list index out of range"
     ]
    }
   ],
   "source": [
    "label_image(list_dir(no_tumor))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b> Get all the data in the directory data/validation (Train: 500 images) (Test: 100 images), and reshape them </b>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found 502 images belonging to 2 classes.\n"
     ]
    }
   ],
   "source": [
    "train_generator = ImageDataGenerator().flow_from_directory(\n",
    "    train_img_dir,\n",
    "    target_size= (256, 256),\n",
    "    batch_size = 500)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found 100 images belonging to 2 classes.\n"
     ]
    }
   ],
   "source": [
    "test_generator = ImageDataGenerator().flow_from_directory(\n",
    "    test_img_dir,\n",
    "    target_size= (256, 256),\n",
    "    batch_size = 100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_images, train_labels = next(train_generator)\n",
    "test_images, test_labels = next(test_generator)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<PIL.Image.Image image mode=RGB size=256x256>"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "array_to_img(train_images[10])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b> Transform the matrix </b>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_img_unrow = train_images.reshape(500, -1).T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(196608, 500)"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.shape(train_img_unrow)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "m = 100\n",
    "test_img_unrow = test_images.reshape(m, -1).T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(196608, 100)"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.shape(test_img_unrow)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Class Indices"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'no': 0, 'yes': 1}"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_generator.class_indices"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_labels_final = train_labels.T[[1]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1, 500)"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.shape(train_labels_final)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_labels_final = test_labels.T[[1]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1, 100)"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.shape(test_labels_final)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<PIL.Image.Image image mode=RGB size=256x256>"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "array_to_img(train_images[240])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.], dtype=float32)"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_labels_final[:,240]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data Standardization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "numpy.ndarray"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_img_final = train_img_unrow/255\n",
    "test_img_final = test_img_unrow/255\n",
    "\n",
    "type(test_img_unrow)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Logistic Regression-based Neural Network"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b> Initialize b </b>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "b = 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b> Initialize w </b>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "def init_w(n):\n",
    "    w = np.zeros((n,1))\n",
    "    return w"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "w = init_w(256*256*3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b> Forward Propagation </b>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "def propagation(w, b, x, y):\n",
    "    l = x.shape[1]\n",
    "    y_hat = 1/(1 + np.exp(- (np.dot(w.T, x) + b)))                                  \n",
    "    cost = -(1/l) * np.sum(y * np.log(y_hat) + (1-y)* np.log(1 - y_hat))    \n",
    "    dw = (1/l) * np.dot(x,(y_hat - y).T)\n",
    "    db = (1/l) * np.sum(y_hat - y)\n",
    "    return dw, db, cost"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "dw, db, cost = propagation(w, b, train_img_final, train_labels_final)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[-0.00364706]\n",
      " [-0.00269804]\n",
      " [-0.0033451 ]\n",
      " ...\n",
      " [-0.01177647]\n",
      " [-0.01160784]\n",
      " [-0.01128235]]\n",
      "-0.002\n",
      "0.6931471805599454\n"
     ]
    }
   ],
   "source": [
    "print(dw)\n",
    "\n",
    "print(db)\n",
    "\n",
    "print(cost)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b> Optimization </b>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "def optimization(w, b, x, y, num_iterations, learning_rate, print_cost = False):\n",
    "    \n",
    "    costs = []\n",
    "    \n",
    "    for i in range(num_iterations):\n",
    "        dw, db, cost = propagation(w, b, x, y)    \n",
    "        w = w - learning_rate*dw\n",
    "        b = b - learning_rate*db\n",
    "        \n",
    "        # Record the costs and print them every 50 iterations\n",
    "        if i % 50 == 0:\n",
    "            costs.append(cost)\n",
    "        if print_cost and i % 50 == 0:\n",
    "            print (\"Cost after iteration %i: %f\" %(i, cost))\n",
    "    \n",
    "    return w, b, costs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cost after iteration 0: 0.693147\n",
      "Cost after iteration 50: 0.521153\n",
      "Cost after iteration 100: 0.454500\n",
      "Cost after iteration 150: 0.411769\n"
     ]
    }
   ],
   "source": [
    "w, b, costs = optimization(w, b, train_img_final, train_labels_final, \n",
    "                           num_iterations= 151, learning_rate = 0.0001, print_cost = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b> Label Predictions </b>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "def prediction(w, b, x):\n",
    "    l = x.shape[1]\n",
    "    y_prediction = np.zeros((1, l))\n",
    "    w = w.reshape(x.shape[0], 1)\n",
    "    y_hat = 1/(1 + np.exp(- (np.dot(w.T, x) + b))) \n",
    "    p = y_hat\n",
    "    \n",
    "    for i in range(y_hat.shape[1]):\n",
    "        if (y_hat[0,i] > 0.5): \n",
    "            y_prediction[0, i] = 1\n",
    "        else:\n",
    "            y_prediction[0, i] = 0\n",
    "    return y_prediction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1., 1., 0., 0.]])"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "w = np.array([[0.035], [0.123], [0.217]])\n",
    "b = 0.2\n",
    "x = np.array([[0.2, 0.4, -1.2, -2], \n",
    "              [1, -2., 0.1, -1], \n",
    "              [0.2, 0.4, -1.2, -2]])\n",
    "\n",
    "prediction(w, b, x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b> Overall Model </b>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [],
   "source": [
    "def model(x_train, y_train, x_test, y_test, num_iterations = 2000, learning_rate = 0.5, print_cost = False):\n",
    "\n",
    "    b = 0\n",
    "    w = init_w(np.shape(x_train)[0]) \n",
    "\n",
    "    # Gradient descent (≈ 1 line of code)\n",
    "    w, b, costs = optimization(w, b, x_train, y_train, num_iterations, learning_rate, print_cost)\n",
    "    \n",
    "    y_pred_test = prediction(w, b, x_test)\n",
    "    y_pred_train = prediction(w, b, x_train)\n",
    "\n",
    "    # Print train/test errors\n",
    "    print('train accuracy: {} %'.format(100 - np.mean(np.abs(y_pred_train - y_train)) * 100))\n",
    "    print('test accuracy: {} %'.format(100 - np.mean(np.abs(y_pred_test - y_test)) * 100))\n",
    "\n",
    "    output = {'costs': costs, \n",
    "              'y_pred_test': y_pred_test,  \n",
    "              'y_pred_train' : y_pred_train,  \n",
    "              'w' : w, \n",
    "              'b' : b, \n",
    "              'learning_rate' : learning_rate, \n",
    "              'num_iterations': num_iterations}\n",
    "    \n",
    "    return output"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cost after iteration 0: 0.693147\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\msavg\\AppData\\Local\\Temp\\ipykernel_1844\\3547166593.py:4: RuntimeWarning: divide by zero encountered in log\n",
      "  cost = -(1/l) * np.sum(y * np.log(y_hat) + (1-y)* np.log(1 - y_hat))\n",
      "C:\\Users\\msavg\\AppData\\Local\\Temp\\ipykernel_1844\\3547166593.py:4: RuntimeWarning: invalid value encountered in multiply\n",
      "  cost = -(1/l) * np.sum(y * np.log(y_hat) + (1-y)* np.log(1 - y_hat))\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cost after iteration 50: 1.428492\n",
      "Cost after iteration 100: 0.232415\n",
      "Cost after iteration 150: 0.082094\n",
      "Cost after iteration 200: 0.037336\n",
      "Cost after iteration 250: 0.024759\n",
      "Cost after iteration 300: 0.017805\n",
      "Cost after iteration 350: 0.013923\n",
      "Cost after iteration 400: 0.011646\n",
      "Cost after iteration 450: 0.010154\n",
      "Cost after iteration 500: 0.009082\n",
      "Cost after iteration 550: 0.008264\n",
      "Cost after iteration 600: 0.007614\n",
      "Cost after iteration 650: 0.007081\n",
      "Cost after iteration 700: 0.006633\n",
      "Cost after iteration 750: 0.006250\n",
      "Cost after iteration 800: 0.005917\n",
      "Cost after iteration 850: 0.005625\n",
      "Cost after iteration 900: 0.005366\n",
      "Cost after iteration 950: 0.005134\n",
      "Cost after iteration 1000: 0.004925\n",
      "Cost after iteration 1050: 0.004735\n",
      "Cost after iteration 1100: 0.004562\n",
      "Cost after iteration 1150: 0.004403\n",
      "Cost after iteration 1200: 0.004256\n",
      "Cost after iteration 1250: 0.004121\n",
      "Cost after iteration 1300: 0.003995\n",
      "Cost after iteration 1350: 0.003877\n",
      "Cost after iteration 1400: 0.003768\n",
      "Cost after iteration 1450: 0.003665\n",
      "Cost after iteration 1500: 0.003568\n",
      "Cost after iteration 1550: 0.003477\n",
      "Cost after iteration 1600: 0.003391\n",
      "Cost after iteration 1650: 0.003310\n",
      "Cost after iteration 1700: 0.003233\n",
      "Cost after iteration 1750: 0.003161\n",
      "Cost after iteration 1800: 0.003091\n",
      "Cost after iteration 1850: 0.003025\n",
      "Cost after iteration 1900: 0.002962\n",
      "Cost after iteration 1950: 0.002902\n",
      "train accuracy: 100.0 %\n",
      "test accuracy: 71.0 %\n"
     ]
    }
   ],
   "source": [
    "output = model(train_img_final, train_labels_final, test_img_final, test_labels_final,\n",
    "               num_iterations=2000, learning_rate=0.005, print_cost=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python (learn-env)",
   "language": "python",
   "name": "learn-env"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
